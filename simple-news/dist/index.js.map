{"version":3,"sources":["../server/index.js"],"names":["require","config","path","app","set","configure","autoescape","express","watch","use","secret","process","env","SESSION_SECRET","resave","saveUninitialized","cookie","secure","maxAge","static","join","__dirname","json","urlencoded","extended","req","res","next","locals","h","news","session","bookmarks","listen","PORT","console","log"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAMA;;;;;;AAJAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB,EAAEC,MAAM,YAAR,EAAzB;;AAEA,MAAMC,MAAM,wBAAZ;;AAIA;AACAA,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACA,mBAASC,SAAT,CAAmB,gBAAnB,EAAqC;AACpCC,aAAY,IADwB;AAEpCC,UAASJ,GAF2B;AAGpCK,QAAO;AAH6B,CAArC;;AAMAL,IAAIM,GAAJ,CAAQ,8BAAQ;AACfC,SAAQC,QAAQC,GAAR,CAAYC,cADL;AAEfC,SAAQ,KAFO;AAGfC,oBAAmB,IAHJ;AAIfC,SAAQ;AACPC,UAAQ,KADD;AAEP;AACAC,UAAQ,MAHD,CAGU;AAHV;AAJO,CAAR,CAAR;;AAWA;AACAf,IAAIM,GAAJ,CAAQ,GAAR,EAAa,kBAAQU,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAb;AACA;;AAEA;AACAlB,IAAIM,GAAJ,CAAQ,qBAAWa,IAAX,EAAR,EACEb,GADF,CACM,qBAAWc,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CADN;;AAIA;AACArB,IAAIM,GAAJ,CAAQ,CAACgB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC3BD,KAAIE,MAAJ,CAAWC,CAAX;AACA;AACAH,KAAIE,MAAJ,CAAWE,IAAX,GAAkBL,IAAIM,OAAJ,CAAYD,IAA9B;AACAJ,KAAIE,MAAJ,CAAWI,SAAX,GAAuBP,IAAIM,OAAJ,CAAYC,SAAnC;AACAL;AACA,CAND;;AAQAxB,IAAIM,GAAJ,CAAQ,GAAR;;AAEAN,IAAI8B,MAAJ,CAAWtB,QAAQC,GAAR,CAAYsB,IAAvB,EAA6B,YAAW;AACvCC,SAAQC,GAAR,CAAY,qBAAZ,EAAmCzB,QAAQC,GAAR,CAAYsB,IAA/C;AACA,CAFD","file":"index.js","sourcesContent":["import express from 'express';\n\nimport path from 'path';\nimport bodyParser from 'body-parser';\nimport nunjucks from 'nunjucks';\nimport session from 'express-session';\n\nimport helpers from './config/helpers';\n\nrequire('dotenv').config({ path: './vars.env' });\n\nconst app = express();\n\nimport routes from './routes';\n\n// Setting the view engine\napp.set('view engine', 'html');\nnunjucks.configure('./server/views', {\n\tautoescape: true,\n\texpress: app,\n\twatch: true\n});\n\napp.use(session({\n\tsecret: process.env.SESSION_SECRET,\n\tresave: false,\n\tsaveUninitialized: true,\n\tcookie: {\n\t\tsecure: false,\n\t\t// maxAge: 30000,  // 30sec\n\t\tmaxAge: 600000,  // 10min\n\t}\n }));\n\n// Set static route\napp.use('/', express.static(path.join(__dirname, '../public')));\n// app.use('/', express.static(path.join(__dirname, '../public'), { maxAge: '31d' })); // This will cache the folder for 31days\n\n// Use bodyparser\napp.use(bodyParser.json())\n\t.use(bodyParser.urlencoded({ extended: false }));\n\n\n// Add global middleware available in templates and all routes\napp.use((req, res, next) => {\n\tres.locals.h = helpers;\n\t// Temporary storage for prototype\n\tres.locals.news = req.session.news;\n\tres.locals.bookmarks = req.session.bookmarks;\n\tnext();\n});\n\napp.use('/', routes);\n\napp.listen(process.env.PORT, function() {\n\tconsole.log('Listening to port: ', process.env.PORT);\n});\n"]}